debug.log-request-handling   = "disable"
debug.log-request-header     = "disable"
debug.log-response-header    = "disable"
debug.log-condition-handling = "disable"

debug.log-file-not-found     = "disable" 
debug.log-timeouts           = "disable"

server.max-request-size      = 65000

accesslog.filename          = "/var/log/lighttpd.access.log"
server.errorlog             = "/var/log/lighttpd.error.log"
server.breakagelog          = "/var/log/lighttpd.breakage.log"

server.dir-listing          = "enable"

server.modules = (
"mod_openssl", 
"mod_rewrite",
"mod_setenv",
"mod_access",
"mod_alias",
"mod_expire",
"mod_webdav",
"mod_auth",
"mod_authn_file",
"mod_simple_vhost",
"mod_redirect",
"mod_fastcgi",
"mod_cgi",
"mod_deflate",
"mod_accesslog",
"mod_status",
"mod_ssi"
)

server.indexfiles           = ( "index.php", "index.html", "index.htm" )

mimetype.assign             = (
  ".png"          =>      "image/png",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".gif"          =>      "image/gif",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".shtml"        =>      "text/html",
  ".pdf"          =>      "application/pdf",
  ".swf"          =>      "application/x-shockwave-flash",
  ".txt"          =>      "text/plain",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".gz"           =>      "application/x-gzip",
  ".css"          =>      "text/css",
# above are default mimetypes of DD-WRT
  ".asc"          =>      "text/plain",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".avi"          =>      "video/x-msvideo",
  ".bz2"          =>      "application/x-bzip",
  ".c"            =>      "text/plain",
  ".conf"         =>      "text/plain",
  ".cpp"          =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".dvi"          =>      "application/x-dvi",
  ".jar"          =>      "application/x-java-archive",
  ".js"           =>      "application/javascript",
  ".log"          =>      "text/plain",
  ".m3u"          =>      "audio/x-mpegurl",
  ".mp3"          =>      "audio/mpeg",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".ogg"          =>      "application/ogg",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".ps"           =>      "application/postscript",
  ".qt"           =>      "video/quicktime",
  ".rpm"          =>      "application/x-rpm",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".tar"          =>      "application/x-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".text"         =>      "text/plain",
  ".torrent"      =>      "application/x-bittorrent",
  ".wav"          =>      "audio/x-wav",
  ".wax"          =>      "audio/x-ms-wax",
  ".wma"          =>      "audio/x-ms-wma",
  ".wmv"          =>      "video/x-ms-wmv",
  ".xbm"          =>      "image/x-xbitmap",
  ".xml"          =>      "text/xml",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".zip"          =>      "application/zip",
# default mime type
  ""              =>      "application/octet-stream"
)

url.access-deny             = ( "~", ".inc" )

ssi.exec      = "disable"
ssi.extension = ( ".shtml" )

server.follow-symlink = "enable" 

dir-listing.hide-dotfiles = "enable"
dir-listing.encoding      = "utf-8"

# server.pid-file             = "/var/run/lighttpd.pid"

status.status-url     = "/123/server-status" 
status.config-url     = "/123/server-config" 
status.statistics-url = "/123/server-counters" 
#
#
server.username             = "nobody"
server.groupname            = "nobody"

# need to manuualy create cache-dir with username & groupname
# deflate.cache-dir = "/tmp/lighttpd/cache/compress/"
deflate.mimetypes = ("text/plain", "text/html", "application/x-javascript", "text/css")

##################################################
# our fastcgi.server configuration
#
# since we are using xcache we need to limit ourselves to
# one proc 'max-procs' = 1 . ( each proc has an independent cache )
#
# Memory usage for 100 processes or threads should be
# num-procs = max-procs * ( 1 + PHP_FCGI_CHILDREN ).
# Each PHP-cgi has 671816 virtual and estimated 13M resident
# including xcache configured at 448M
#
# (13MB * 101 processes) + 672M Virtual = 1,985MB RAM (2GB)
# at full throttle
#

fastcgi.debug  =  0
fastcgi.server = (
  ".php" =>
    ( "localhost" =>
      (
        "socket" => "/tmp/php-fastcgi.socket",
        "bin-path" => "/usr/bin/php-cgi",
        "max-procs" => 1,
        "bin-environment" => 
        (
            "PHP_FCGI_CHILDREN" => "1",
            "PHP_FCGI_MAX_REQUESTS" => "100" 
        ),
        "broken-scriptfilename" => "enable" 
      )
    )
)

$HTTP["scheme"] == "http" {
#
#   $REQUEST_HEADER["Upgrade-Insecure-Requests"] == "1" {
#   # Follows https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade-Insecure-Requests
#   # Adding the header only works if mod_setenv is loaded before mod_redirect in the server config!
#   # (See https://redmine.lighttpd.net/issues/1895)
#   setenv.add-response-header = (
#      "Vary" => "Upgrade-Insecure-Requests" 
#   )
#   url.redirect-code = 307
#
    url.redirect = ("" => "https://${url.authority}${url.path}${qsa}")
    url.redirect-code = 308
}

#
# $SERVER["socket"] == ":80" {
#   $HTTP["host"] =~ "(.*)" {
#       url.redirect = (".*" => "https://%0$0")
#       url.redirect = ( "^/(.*)" => "https://%1/$1" )
#   }
#   url.redirect = ( "^(.*)$" => "https://%1:443/$1" )
#   url.redirect = (".*" => "https://%0$0/")
#}

#
# Deny access to apache configuration files.
#
$HTTP["url"] =~ "/\.htaccess|/\.htpasswd|/\.htgroups" {
   url.access-deny = ( "" )
}

$HTTP["useragent"] =~ "^(.*MSIE.*)|(.*AppleWebKit.*)$" {
  server.max-keep-alive-requests = 0
}
#
# lighttpd 1.4.65, intermediate config, OpenSSL 1.1.1k 
# https://ssl-config.mozilla.org/
#
$HTTP["scheme"] == "https" {
   # HTTP Strict Transport Security (63072000 seconds)
   setenv.add-response-header = (
      "Strict-Transport-Security" => "max-age=63072000"
   )
}

$SERVER["socket"] == ":443" {
  ssl.engine	= "enable"
  ssl.pemfile	= "/jffs/etc/ssl/fullchain.cer"
  ssl.ca-file   = "/jffs/etc/ssl/ca.cer"
  ssl.privkey   = "/jffs/etc/ssl/changmw.key"
}

$HTTP["url"] =~ "^/owncloud/data/" {
  url.access-deny = ("")
}

$HTTP["url"] =~ "^/owncloud($|/)" {
  dir-listing.activate = "disable"
}

auth.backend                   = "plain"
auth.backend.plain.userfile    = "/tmp/lighttpd/lighttpd.user"
auth.backend.htpasswd.userfile = "/tmp/lighttpd/lighttpd.htpasswd"

server.bind = "0.0.0.0"
server.port = 80
server.document-root  = "/jffs/www"
server.name = ""
